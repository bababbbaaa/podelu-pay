const TelegramBot = require('node-telegram-bot-api');
const dotenv = require('dotenv');
const { Api, TelegramClient } = require('telegram');
const { StringSession } = require('telegram/sessions');
const admin = require('firebase-admin');
const serviceAccount = require('./podelu-309ea-firebase-adminsdk-wahqz-e6251365fb.json');

const { initializeApp } = require('firebase/app');
require('firebase/firestore');
const { doc, getFirestore, setDoc } = require('firebase/firestore');
const crypto = require('crypto');

const app = admin.initializeApp({
    credential: admin.credential.cert(serviceAccount),
    databaseURL: 'https://podelu-309ea.firebaseio.com',
});

const db = admin.firestore(app);

dotenv.config();

(async () => {
    const apiId = parseInt(process.env.API_ID);
    const apiHash = process.env.API_HASH;

    const session = new StringSession(process.env.SESSION_STRING); // You should put your string session here
    const client = new TelegramClient(session, apiId, apiHash, {});

    const token = process.env.PAYMENT_BOT_ACCESS_TOKEN;
    const bot = new TelegramBot(token, { polling: true });

    const notificationChatId = -1001899025139;
    const podeluChatId = -1001866133787;
    const chatProlongPrice = 2900;
    const chatPrice = 2990;
    const halfYearProlongPrice = 14500;
    const yearProlongPrice = 29000;

    await client.connect();

    bot.on('message', async (msg) => {
        if (msg.text === '–ü—Ä–æ–¥–ª–∏—Ç—å') {
            bot.sendInvoice(
                msg.chat.id,
                '–ß–∞—Ç –ø–æ –¥–µ–ª—É',
                '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –ß–∞—Ç–∞ –ø–æ –¥–µ–ª—É',
                JSON.stringify({ from: msg.from.id }),
                process.env.ROBOKASSA_PAYMENT_ACCESS_TOKEN,
                'RUB',
                JSON.stringify([
                    {
                        label: '–û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞',
                        amount: chatProlongPrice * 100,
                    },
                    {
                        label: '–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
                        amount: chatProlongPrice * 0.03 * 100,
                    },
                ])
            );
        }

        if (msg.text === 'Test') {
            try {
                db.collection('payments')
                    .doc(crypto.randomUUID())
                    .set({
                        from: '147796272',
                        price: 100,
                        created_at: admin.firestore.Timestamp.fromDate(
                            new Date()
                        ),
                    });
            } catch (error) {
                console.log(error);
            }
        }

        if (msg.text === '/start') {
            bot.sendMessage(
                msg.chat.id,
                `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–ª–∞—Ç—ë–∂–Ω—ã–π –±–æ—Ç –ß–∞—Ç–∞ –ø–æ –¥–µ–ª—É. \n
                –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ß–∞—Ç –ø–æ –¥–µ–ª—É: 2990‚ÇΩ / –º–µ—Å—è—Ü
                \n\n
                –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ —É—Ç—Ä–æ
                `,
                {
                    reply_markup: JSON.stringify({
                        inline_keyboard: [
                            [
                                {
                                    text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
                                    web_app: {
                                        url: `https://auth.robokassa.ru/RecurringSubscriptionPage/Subscription/Subscribe?SubscriptionId=e543eb26-7a0f-473d-afbb-b9aa84a80afe&shp_id=${msg.from.id}`,
                                    },
                                },
                            ],
                        ],
                    }),
                }
            );
            client.getDialogs();
        }

        if (msg.text === '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è') {
            bot.sendMessage(msg.chat.id, '');
        }

        if (msg.text === '–í—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç') {
            bot.sendInvoice(
                msg.chat.id,
                '–ß–∞—Ç –ø–æ –¥–µ–ª—É',
                '–û–ø–ª–∞—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –≤ –ß–∞—Ç –ø–æ –¥–µ–ª—É',
                JSON.stringify({ from: msg.from.id }),
                process.env.ROBOKASSA_PAYMENT_ACCESS_TOKEN,
                'RUB',
                JSON.stringify([
                    {
                        label: '–î–æ—Å—Ç—É–ø –≤ –ß–∞—Ç –ø–æ –¥–µ–ª—É',
                        amount: chatPrice * 100,
                    },
                    {
                        label: '–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
                        amount: chatPrice * 0.03 * 100,
                    },
                ])
            );
        }

        if (msg.text === '–ü—Ä–æ–¥–ª–∏—Ç—å 22c585f75c24d937f90165dc341b1dbd') {
            // –æ—Ç–∑—ã–≤
            bot.sendInvoice(
                msg.chat.id,
                '–ß–∞—Ç –ø–æ –¥–µ–ª—É',
                '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π –∑–∞ –æ—Ç–∑—ã–≤',
                JSON.stringify({ from: msg.from.id }),
                process.env.ROBOKASSA_PAYMENT_ACCESS_TOKEN,
                'RUB',
                JSON.stringify([
                    {
                        label: '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞',
                        amount: 1450 * 100,
                    },
                    {
                        label: '–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
                        amount: 1450 * 0.03 * 100,
                    },
                ])
            );
        }

        if (msg.text === '–ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ –ø–æ–ª–≥–æ–¥–∞') {
            // –ø–æ–ª –≥–æ–¥–∞
            bot.sendInvoice(
                msg.chat.id,
                '–ß–∞—Ç –ø–æ –¥–µ–ª—É',
                '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –ø–æ–ª–≥–æ–¥–∞',
                JSON.stringify({ from: msg.from.id }),
                process.env.ROBOKASSA_PAYMENT_ACCESS_TOKEN,
                'RUB',
                JSON.stringify([
                    {
                        label: '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –ø–æ–ª–≥–æ–¥–∞',
                        amount: halfYearProlongPrice * 100,
                    },
                    {
                        label: '–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
                        amount: halfYearProlongPrice * 0.03 * 100,
                    },
                ])
            );
        }

        if (msg.text === '–ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ –≥–æ–¥') {
            // –≥–æ–¥
            bot.sendInvoice(
                msg.chat.id,
                '–ß–∞—Ç –ø–æ –¥–µ–ª—É',
                '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –≥–æ–¥',
                JSON.stringify({ from: msg.from.id }),
                process.env.ROBOKASSA_PAYMENT_ACCESS_TOKEN,
                'RUB',
                JSON.stringify([
                    {
                        label: '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –≥–æ–¥',
                        amount: yearProlongPrice * 100,
                    },
                    {
                        label: '–ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—ë–∂–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
                        amount: yearProlongPrice * 0.03 * 100,
                    },
                ])
            );
        }
    });

    bot.on('pre_checkout_query', (query) => {
        bot.answerPreCheckoutQuery(query.id, true);
    });

    // const getInviteLink = async () => {
    //     const result = await client.invoke(
    //         new Api.messages.ExportChatInvite({
    //             peer: -1001866133787,
    //             legacyRevokePermanent: false,
    //             requestNeeded: false,
    //             expireDate: 0,
    //             usageLimit: 1,
    //             title: '–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —á–∞—Ç',
    //         })
    //     );
    //     return result;
    // };

    bot.on('successful_payment', async (message) => {
        const payload = JSON.parse(
            message?.successful_payment?.invoice_payload
        );
        const result = await bot.getChatMember(message.chat.id, payload.from);

        const nick = result.user.username
            ? `@${result.user.username}`
            : result.user.id;

        try {
            bot.sendMessage(
                notificationChatId,
                `–ü—Ä–∏—à–ª–æ ${
                    message.successful_payment.total_amount / 100
                }‚ÇΩ –æ—Ç ${nick}`
            );
            bot.sendMessage(
                podeluChatId,
                `–ü—Ä–∏—à–ª–æ ${
                    message.successful_payment.total_amount / 100
                }‚ÇΩ –æ—Ç ${nick}`
            );
        } catch (error) {}

        try {
            db.collection('payments')
                .doc(crypto.randomUUID())
                .set({
                    from: payload?.from,
                    price: message?.successful_payment?.total_amount / 100,
                    created_at: admin.firestore.Timestamp.fromDate(new Date()),
                });
        } catch (error) {
            console.log(error);
        }

        if (message.successful_payment.total_amount / 100 > 2900) {
            const messageText =
                '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–ø–ª–∞—Ç—É. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤ —á–∞—Ç –Ω–∞–ø–∏—à–∏—Ç–µ @nicholasitnikov ü§ù';
            bot.sendMessage(message.chat.id, messageText);
        } else {
            const messageText =
                '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–ø–ª–∞—Ç—É. –î–æ—Å—Ç—É–ø –≤ —á–∞—Ç –ø—Ä–æ–¥–ª—ë–Ω –Ω–∞ –º–µ—Å—è—Ü ü§ù';
            bot.sendMessage(message.chat.id, messageText);
        }
    });
})();
